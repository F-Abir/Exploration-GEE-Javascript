

var roi = ee.FeatureCollection('FAO/GAUL/2015/level2')
  .filter(ee.Filter.eq('ADM0_NAME', 'Bangladesh'))
  .filter(ee.Filter.inList('ADM2_NAME', ['Sylhet']))
  .geometry();
Map.addLayer(roi)
Map.centerObject(roi,10)

var time_start = '2000', time_end = '2020'

var chirps = ee.ImageCollection("UCSB-CHG/CHIRPS/DAILY")
.filterDate(time_start, time_end);

function temporal_collection(collection, start, count, interval, unit){
  var seq = ee.List.sequence(0, ee.Number(count).subtract(1));
  var origin_date = ee.Date(start);
  return ee.ImageCollection(seq.map(function(i){
    var start_date = origin_date.advance(ee.Number(interval).multiply(i), unit);
    var end_date = origin_date.advance(ee.Number(interval).multiply(ee.Number(i).add(1)), unit);
    return collection.filterDate(start_date, end_date).sum()
    .set('system:time_start', start_date.millis())
    .set('system:time_end', end_date.millis())
    }))
  }

var monthly = temporal_collection(chirps, time_start, 240, 1, 'month');


var pr_mean = monthly.mean();


var anomaly = monthly.map(function(img){
  return img.subtract(pr_mean)
  .copyProperties(img, img.propertyNames())
  });
  
  
print(
  ui.Chart.image.series(anomaly, roi, ee.Reducer.mean(),
  5000, 'system:time_start').setChartType('ColumnChart')
  )


Export.image.toDrive({
  image: anomaly.filterDate('2010','2011').toBands().clip(roi).float(),
  description: 'pr_anomaly2010', 
  scale: 5000, 
  region: roi, 
  folder: 'precipitatoin',
  crs: 'EPSG:4326',
  })
